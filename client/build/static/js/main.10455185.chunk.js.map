{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/SortItem/SortItem.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","utils/mutations.js","components/Footer/Footer.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","SET_SORT_BY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","sort_type","sort","a","b","Number","price","String","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","SortItem","useState","options","title","width","height","viewBox","fill","xmlns","d","htmlFor","onChange","selected","target","selectedIndex","id","CategoryMenu","categoryData","class","location","reload","CartItem","placeholder","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","LOGIN","ADD_ORDER","ADD_USER","ADD_NEWSLETTER","Footer","setName","useMutation","addNewsletter","handleFormSubmit","event","preventDefault","email","onSubmit","Home","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","clear","paddingTop","textAlign","NoMatch","Login","password","formState","setFormState","login","error","mutationResponse","handleChange","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.10455185.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('pizza-delight', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const SET_SORT_BY = \"SET_SORT_BY\";","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n  SET_SORT_BY\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n\n      case SET_SORT_BY:\n        const products = [...state.products];\n        console.log(action.sort_type);\n        if(action.sort_type === 'price_asc'){\n  \n          products.sort((a, b) => {\n            \n            if ( Number(a.price) > Number(b.price) ){\n              return 1;\n            }else{\n              return -1;\n            }\n          })\n        }\n  \n        if(action.sort_type === 'price_desc'){\n  \n          products.sort((a, b) => {\n            \n            if ( Number(a.price) > Number(b.price) ){\n              return -1;\n            }else{\n              return 1;\n            }\n          })\n        }\n  \n  \n        if(action.sort_type === 'name_asc'){\n  \n          products.sort((a, b) => {\n            \n            if ( String(a.name) > String(b.name) ){\n              return 1;\n            }else{\n              return -1;\n            }\n          })\n        }\n  \n        if(action.sort_type === 'name_desc'){\n  \n          products.sort((a, b) => {\n            \n            if ( String(a.name) > String(b.name) ){\n              return -1;\n            }else{\n              return 1;\n            }\n          })\n        } \n          \n        \n       return {\n          ...state,\n          products: products\n       }  \n  \n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useState } from 'react'\nimport { SET_SORT_BY } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport './style.css'\n\nexport default function SortItem() {\n\n\n\nconst [sortBy, setSortBy] = useState(\"\");\n\nconst [state, dispatch] = useStoreContext();\n\n\nconst options = [\n    {\n        title: \"Please choose an option\",\n        value: ''\n    },\n    {\n        title: \"Price By Lowest Value\",\n        value: \"price_asc\"\n    },\n    {\n        title: \"Price By Highest Value\",\n        value: \"price_desc\"\n    },\n    {\n        title: \"Name By Ascending\",\n        value: \"name_asc\"\n    },\n    {\n        title: \"Name By Descending\",\n        value: \"name_desc\"\n    }\n]\n\n\nfunction sort(e){\n //   console.log(e.target.selectedIndex);\n    const selected =options[e.target.selectedIndex];\n\n    dispatch({\n        type: SET_SORT_BY,\n        sort_type: selected.value\n    })\n    \n}\n\n\n    return (\n        <div className='sort'>\n            <svg \n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    />\n                </svg>\n            <label htmlFor=\"price-sort\">Sort by:</label>\n\n            <select onChange={sort} id=\"product-sort\">\n                {options.map((item) => (\n                    <option key={item.title} value={item.value}>{item.title}</option>\n                ))}\n            </select>\n\n\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport SortItem from '../SortItem/SortItem';\nimport './style.css'\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className='menu-container'>\n      <div class=\"flex-item-left1\">\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n      <button onClick={() => window.location.reload()}>All</button>\n      </div>\n      <div class=\"flex-item-right1\">\n      <SortItem />\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    \n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    \n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    \n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    \n    localStorage.removeItem('id_token');\n    \n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_51Kuw0eLcEVUvvX35Dhu0zRg18lprjSZeMTCrZCi21Fk8yqHkHczzTJ8ecqHaBlpMbNvcfErLH8jxbHpn131RHL9r00dO1Tho3q');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    console.log(\"submitCheckout called\")\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_NEWSLETTER = gql`\nmutation addNewsletter($email: String!) {\n  addNewsletter(email: $email) {\n    _id\n    email\n  }\n}\n`;","import React, { useState} from 'react'\nimport { useMutation } from '@apollo/client';\nimport { ADD_NEWSLETTER } from '../../utils/mutations';\n\n\nimport './Footer.css'\n\n\nconst Footer = () => {\n  const [name, setName] = useState('');\n  console.log('name', name)\n  const [addNewsletter] = useMutation(ADD_NEWSLETTER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    await addNewsletter({\n      variables: {\n        email: name,\n      },\n\n    });\n    setName('');\n  }\n    \n    \n  return (\n  <div className='footer-container'>\n    <div className = 'flex-row'>          \n        {/* left */}\n        <div className= 'card1 px-1 py-1'> \n          <div className='left'>       \n            <h3>OUR NEWSLETTER</h3>\n              <p className='newsLetter-p'>Subscribe to our newsletter to receive special offers and updates on new products</p>\n              {/* <p>Email *</p> */}\n              <form\n                  className=\"flex-row justify-center justify-space-between-md align-center\"\n                  onSubmit={handleFormSubmit}\n              >\n              <input className='input-box' placeholder='Email *' type=\"email\" \n              value={name} onChange={(event) => setName(event.target.value)} />\n              <div>\n                <button className='footer-button' type=\"submit\">Subscribe</button> \n              </div>\n              </form>  \n            </div>      \n        </div>\n        \n        {/* middle */}\n        <div className=\"card1 px-1 py-1\">\n          <div className ='middle'>\n            <h5>Thank you for shopping</h5>           \n          </div>\n        </div>\n        \n        {/* right */}\n        <div className=\"card1 px-1 py-1\">  \n          <div className='right'>      \n            <h3>CONTACT</h3>\n            <p>12th cross street, Melbourne</p>\n            <p>pizza@myweb.com</p>\n            <p> 123-456-7890</p>  \n          </div>     \n        </div>\n     </div> \n  </div>\n\n    \n  )\n}\n\nexport default Footer\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport Footer from \"../components/Footer/Footer\";\n\nconst Home = () => {\n  return (\n    <>\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />      \n    </div>\n    <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\nimport Footer from \"../components/Footer/Footer\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n      <Footer />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            \n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\"  onClick={() => window.location.reload()}>\n          <span role=\"img\" aria-label=\"pizza delight\">🍕</span>\n          Pizza Delight\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route\n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n          \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}